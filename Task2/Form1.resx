<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAQQAA
        AMAAAAD7AAAA+gAAAL8AAABAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAgAAAAAAAAAAAAAAOwAA
        ALYAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAC1AAAAOgAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAPAAA
        ALoAAAD/AAAA/wAAAP8AAAD+AAAA/wAAAP8AAAD+AAAA/wAAAP8AAAD/AAAAuQAAADsAAAAAAAAAAAAA
        AAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAPAAA
        ALkAAAD+AAAA/gAAAP8AAAD+AAAAmwAAAHUAAAD/AAAA/wAAAHYAAACcAAAA/gAAAP8AAAD+AAAA/gAA
        ALgAAAA7AAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAAAAPAAA
        ALkAAAD+AAAA/gAAAP8AAAD7AAAAqQAAADEAAAAAAAAATQAAAP8AAAD/AAAATQAAAAAAAAAyAAAAqgAA
        APsAAAD/AAAA/gAAAP4AAAC4AAAAOwAAAAAAAAABAAAAAwAAAAEAAAAAAAAAAAAAAAIAAAAAAAAAOwAA
        ALkAAAD+AAAA/gAAAP8AAAD7AAAAqQAAAC0AAAAAAAAABAAAAAAAAABOAAAA/wAAAP8AAABOAAAAAAAA
        AAQAAAAAAAAALgAAAKoAAAD7AAAA/wAAAP4AAAD+AAAAuQAAADoAAAAAAAAAAgAAAAAAAAABAAAAAAAA
        AJMAAAD/AAAA/QAAAP8AAAD7AAAAqQAAAC0AAAAAAAAAAQAAAAMAAAAGAAAAAAAAAEwAAAD/AAAA/wAA
        AEwAAAAAAAAABgAAAAMAAAABAAAAAAAAAC4AAACqAAAA+wAAAP8AAAD9AAAA/wAAAJIAAAAAAAAAAQAA
        AAAAAABqAAAA/wAAAPwAAAD7AAAAqQAAAC0AAAAAAAAAAQAAAAMAAAADAAAAAAAAAAMAAAAAAAAATAAA
        AP8AAAD/AAAATAAAAAAAAAADAAAAAAAAAAMAAAADAAAAAQAAAAAAAAAuAAAAqgAAAPsAAAD8AAAA/wAA
        AGkAAAAAAAAAAAAAAMcAAAD/AAAA6AAAADUAAAAAAAAAAQAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAABMAAAA/wAAAP8AAABMAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAEAAAAAAAAANgAA
        AOgAAAD/AAAAxgAAAAAAAAALAAAA3QAAAP8AAACjAAAAAAAAAAYAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAEwAAAD/AAAA/wAAAEwAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAYAAAAAAAAAowAAAP8AAADcAAAACwAAAAwAAADeAAAA/wAAAJ8AAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAATAAAAP8AAAD/AAAATAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAACfAAAA/wAAAN4AAAAMAAAADAAAAN8AAAD/AAAAnwAAAAAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABMAAAA/wAAAP8AAABMAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAJ8AAAD/AAAA3wAAAAwAAAAMAAAA3wAAAP8AAACfAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAEwAAAD/AAAA/wAAAEwAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAnwAAAP8AAADfAAAADAAAAAwAAADfAAAA/wAA
        AJ8AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAATAAAAP8AAAD/AAAATAAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACfAAAA/wAAAN8AAAAMAAAADAAA
        AN8AAAD/AAAAnwAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABOAAAA/wAA
        AP8AAABOAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAJ8AAAD/AAAA3wAA
        AAwAAAAMAAAA3wAAAP8AAACfAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAAAAA
        AEsAAAD/AAAA/wAAAEsAAAAAAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAnwAA
        AP8AAADfAAAADAAAAAwAAADfAAAA/wAAAJ8AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAgAA
        AAEAAAAAAAAAegAAAP8AAAD/AAAAegAAAAAAAAABAAAAAgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAACfAAAA/wAAAN8AAAAMAAAADAAAAN8AAAD/AAAAnwAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAgAA
        AAAAAAACAAAAUAAAAM0AAAD/AAAA/QAAAP0AAAD/AAAAzgAAAFEAAAACAAAAAAAAAAIAAAAEAAAAAAAA
        AAAAAAAEAAAAAAAAAJ8AAAD/AAAA3wAAAAwAAAAMAAAA3wAAAP8AAACfAAAAAAAAAAQAAAAEAAAAAgAA
        AAAAAAACAAAAUQAAAM0AAAD/AAAA/gAAAP8AAADvAAAA7gAAAP8AAAD+AAAA/wAAAM0AAABRAAAAAgAA
        AAAAAAACAAAABAAAAAQAAAAAAAAAnwAAAP8AAADfAAAADAAAAAwAAADfAAAA/wAAAJ8AAAAAAAAABgAA
        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
        IgIgEYgEiAQgEUIBgELQgAEL9CAEL/0IEL8=
</value>
  </data>
</root>